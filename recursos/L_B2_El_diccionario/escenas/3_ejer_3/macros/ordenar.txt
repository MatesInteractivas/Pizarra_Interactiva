tipo_de_macro=R2
Idioma=espa&ntilde;ol
id='debug' constante='s&iacute;' expresi&oacute;n='0' evaluar='una-sola-vez'
id='nIndicesAux' constante='s&iacute;' expresi&oacute;n='0' evaluar='siempre'
id='n_numeros' constante='s&iacute;' expresi&oacute;n='3' evaluar='una-sola-vez'
id='vecValue' vector='s&iacute;' evaluar='una-sola-vez' tama&ntilde;o='n_numeros+20'
id='vecValueDis' vector='s&iacute;' evaluar='una-sola-vez' tama&ntilde;o='n_numeros+20'
id='VecAux1' vector='s&iacute;' evaluar='una-sola-vez' tama&ntilde;o='n_numeros+20'
id='resVec' vector='s&iacute;' evaluar='una-sola-vez' tama&ntilde;o='n_numeros+20'
id='initVecAux()' algoritmo='s&iacute;' algoritmo='s&iacute;' inicio='_indexT=0;_ancla=minRango;' hacer='VecAux1[_indexT]=_indexT;resVec[_indexT]=-1;_indexT=_indexT+1;' mientras='_indexT&lt;n_numeros'
id='reacomodaVector(_posBorrar)' algoritmo='s&iacute;' algoritmo='s&iacute;' inicio='_indexAcomoda=_posBorrar;' hacer='VecAux1[_indexAcomoda]=VecAux1[_indexAcomoda+1];_indexAcomoda=_indexAcomoda+1' mientras='_indexAcomoda&lt;nIndicesAux'
id='buscaMin()' algoritmo='s&iacute;' expresi&oacute;n='_tmpIndexMin' algoritmo='s&iacute;' inicio='_indexBuscMin=0;_tmpIndexMin=0;_tmpMin=vecValue[VecAux1[_tmpIndexMin]];' hacer='_indexTmp=VecAux1[_indexBuscMin];_valueTmp=vecValue[_indexTmp];_valueTmpDis=vecValueDis[_indexTmp];_valueTmpDisAnt=vecValueDis[VecAux1[_tmpIndexMin]];;;_tmpMin2=min(_tmpMin,_valueTmp);_igualesTmp=(_tmpMin==_valueTmp);_menorDisc=(_valueTmpDis&lt;_valueTmpDisAnt);;_cambioMin=(_tmpMin2==_valueTmp)&amp;((!_igualesTmp)|_menorDisc);_tmpIndexMin=(_cambioMin)?_indexBuscMin:_tmpIndexMin;_tmpMin=_tmpMin2;_indexBuscMin=_indexBuscMin+1;' mientras='_indexBuscMin&lt;nIndicesAux'
id='ordenaAux()' algoritmo='s&iacute;' algoritmo='s&iacute;' inicio='nIndicesAux=n_numeros;' hacer='_indexMin=buscaMin();_indexDebug=(n_numeros-nIndicesAux);resVec[_indexDebug]=VecAux1[_indexMin];reacomodaVector(_indexMin);nIndicesAux=nIndicesAux-1;' mientras='(nIndicesAux&gt;0)'
id='ordena()' algoritmo='s&iacute;' algoritmo='s&iacute;' hacer='initVecAux();ordenaAux()'
id='generaAleatorios()' algoritmo='s&iacute;' algoritmo='s&iacute;' inicio='_indexAle=0;' hacer='vecValue[_indexAle]=(rnd*1000-500);_indexAle=_indexAle+1' mientras='_indexAle&lt;n_numeros'
tipo='texto' dibujar-si='debug>=1' expresi&oacute;n='[10,20*s]' familia='s' s.intervalo='[0,n_numeros-1]' s.pasos='n_numeros-1' texto='res([s])=[resVec[s]]' fijo='no' 
tipo='texto' dibujar-si='debug>=1' expresi&oacute;n='[110,20*s]' familia='s' s.intervalo='[0,n_numeros-1]' s.pasos='n_numeros-1' texto='aux([s])=[VecAux1[s]]' fijo='no' 
tipo='texto' dibujar-si='debug>=1' expresi&oacute;n='[220,20*s]' familia='s' s.intervalo='[0,n_numeros-1]' s.pasos='n_numeros-1' texto='value([s])=[vecValue[s]],[[vecValueDis[s]]]' fijo='no' 
tipo='texto' dibujar-si='debug>=1' expresi&oacute;n='[370,20*s]' familia='s' s.intervalo='[0,n_numeros-1]' s.pasos='n_numeros-1' texto='[s]=[vecValue[resVec[s]]]' fijo='no' 
